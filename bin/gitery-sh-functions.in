#!/bin/sh

if [ -z "${__included_gitery_sh_functions-}" ]; then
__included_gitery_sh_functions=1

[ -z "${PATH##@CMD_DIR@:*}" -o -z "${PATH%%*:@CMD_DIR@}" ] ||
	PATH="@CMD_DIR@:$PATH"

. shell-error
. gitery-sh-config

normalize_gitdir()
{
	local name0 name
	name0="$1"; shift

	[ -n "${name0##/}" ] && [ "$name0" = "${name0%/}" ] ||
		fatal "$name0: invalid git repository directory name"
	name="${name0%.git}.git"
	if [ "${name%/*}" = "$name" ]; then
		printf 'packages/%s' "$name"
	else
		printf '%s' "$name" | tr -s /
	fi
}

validate_user_gitdir()
{
	local dir0 ndir
	dir0="$1"; shift

	ndir="$(normalize_gitdir "$dir0")"
	ndir="${ndir#$PEOPLE_DIR/$GITERY_USER/}"
	case "${ndir%/*}" in
		packages|private|public) ;;
		*) fatal "$dir0: invalid git repository directory name" ;;
	esac
	printf %s "${ndir##*/}" |grep -Exqse "$PROJECT_NAME_REGEXP\.git" ||
		fatal "$dir0: invalid git repository directory name"
	printf %s "$ndir"
}

validate_user_exported_gitdir()
{
	local dir0 ndir
	dir0="$1"; shift

	ndir="$(validate_user_gitdir "$dir0")"
	[ -f "$ndir/git-daemon-export-ok" ] ||
		fatal "$dir0: git repository not available"
	printf %s "$ndir"
}

validate_local_exported_gitdir()
{
	local dir0 ndir
	dir0="$1"; shift

	ndir="$(normalize_gitdir "$dir0")"
	if [ "${ndir#/}" = "$ndir" ]; then
		ndir="$PEOPLE_DIR/$GITERY_USER/$ndir"
	fi
	[ -f "$ndir/git-daemon-export-ok" ] ||
		fatal "$dir0: git repository not available"
	printf %s "$ndir"
}

fi #__included_gitery_sh_functions
